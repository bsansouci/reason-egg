{"version":3,"sources":["require_polyfill.js"],"names":["normalizeArray","parts","allowAboveRoot","up","i","length","last","splice","unshift","pathNormalize","path","isAbsolute","charAt","trailingSlash","substr","split","filter","p","join","globalEval","eval","currentScript","document","projectRoot","dataset","Error","nodeModulesDir","modulesCache","packageJsonMainCache","ensureEndsWithJs","endsWith","loadScript","scriptPath","request","XMLHttpRequest","open","send","dirSeparatorIndex","lastIndexOf","dir","slice","moduleText","responseText","module","exports","main"],"mappings":"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","file":"eab3e4ff9920b84fe00f43286a623701.map","sourcesContent":["function normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n};\n\nfunction pathNormalize(path) {\n  var isAbsolute = path.charAt(0) === '/';\n  var trailingSlash = path.substr(-1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(path.split('/').filter(function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\nvar globalEval = eval;\nvar currentScript = document.currentScript;\nvar projectRoot = currentScript.dataset['project-root'] || currentScript.dataset['projectRoot'];\nif (projectRoot == null) {\n  throw new Error('The attribute `data-project-root` isn\\'t found in the script tag. You need to provide the root (in which node_modules reside).')\n}\nvar nodeModulesDir = projectRoot + '/node_modules/';\n\nvar modulesCache = {};\nvar packageJsonMainCache = {};\n\nvar ensureEndsWithJs = function(path) {\n  if (path.endsWith('.js')) {\n    return path;\n  } else {\n    return path + '.js';\n  }\n};\nfunction loadScript(scriptPath) {\n  var request = new XMLHttpRequest();\n\n  request.open(\"GET\", scriptPath, false); // sync\n  request.send();\n  var dirSeparatorIndex = scriptPath.lastIndexOf('/');\n  var dir = dirSeparatorIndex === -1 ? '.' : scriptPath.slice(0, dirSeparatorIndex);\n\n  var moduleText = `\n(function(module, exports, modulesCache, packageJsonMainCache, nodeModulesDir) {\n  function require(path) {\n    var __dirname = \"${dir}/\";\n    var resolvedPath;\n    if (path.startsWith('.')) {\n      // require('./foo/bar')\n      resolvedPath = ensureEndsWithJs(__dirname + path);\n    } else if (path.indexOf('/') === -1) {\n      // require('react')\n      var packageJson = pathNormalize(nodeModulesDir + path + '/package.json');\n      if (packageJsonMainCache[packageJson] == null) {\n        var jsonRequest = new XMLHttpRequest();\n        jsonRequest.open(\"GET\", packageJson, false);\n        jsonRequest.send();\n        var main;\n        if (jsonRequest.responseText != null) {\n          main = JSON.parse(jsonRequest.responseText).main;\n        };\n        if (main == null) {\n          main = 'index.js';\n        } else if (!main.endsWith('.js')) {\n          main = main + '.js';\n        }\n        packageJsonMainCache[packageJson] = nodeModulesDir + path + '/' + main;\n      }\n      resolvedPath = packageJsonMainCache[packageJson];\n    } else {\n      // require('react/bar')\n      resolvedPath = ensureEndsWithJs(nodeModulesDir + path);\n    };\n    resolvedPath = pathNormalize(resolvedPath);\n    if (modulesCache[resolvedPath] != null) {\n      return modulesCache[resolvedPath];\n    };\n    var result = loadScript(resolvedPath);\n    modulesCache[resolvedPath] = result;\n    return result;\n  };\n  var process = {env: {}, argv: []};\n  var global = {};\n\n\n// -------Begin Require Polyfilled Module Loaded From Disk------------------------------\n// file: ${scriptPath}\n// root: ${projectRoot}\n// ----------------------------------------------------------------------\n${request.responseText}\n// -------End Polyfill Loaded From Disk------------------------------\n// file: ${scriptPath}\n// root: ${projectRoot}\n// ----------------------------------------------------------------------\nreturn module.exports})\\n//@ sourceURL=${scriptPath}`;\n  var module = {exports: {}};\n  return globalEval(moduleText)(module, module.exports, modulesCache, packageJsonMainCache, nodeModulesDir);\n};\n\nloadScript(currentScript.dataset.main)\n"]}